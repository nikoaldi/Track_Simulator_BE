quarkus.datasource.db-kind = postgresql
quarkus.datasource.username = postgres
quarkus.datasource.password = 123123
quarkus.datasource.jdbc.url = jdbc:postgresql://localhost:9090/track_simulator

# drop and create the database at startup (use `update` to only update the schema)
quarkus.hibernate-orm.database.generation = drop-and-create

#CORS
quarkus.http.cors=true
quarkus.http.cors.origins=*
quarkus.http.cors.methods=GET, POST, PUT, DELETE
quarkus.http.cors.exposed-headers=Contens-Disposition
quarkus.http.cors.access-control-max-age=24H
quarkus.http.cors.access-control-allow-credentials=true

kafka.bootstrap.servers=localhost:9092

#KAFKA OUT
mp.messaging.outgoing.Ownplatform-out.topic=ownplatform
mp.messaging.outgoing.Ownplatform-out.connector=smallrye-kafka
mp.messaging.outgoing.Ownplatform-out.value.deserializer=pkg.OwnPlatform.OwnPlatformDeserializer
mp.messaging.outgoing.Ownplatform-out.auto.offset.reset=earliest
mp.messaging.outgoing.Ownplatform-out.merge=true

#mp.messaging.outgoing.test-out.topic=random
#mp.messaging.outgoing.test-out.connector=smallrye-kafka
#mp.messaging.outgoing.test-out.value.deserializer=org.apache.kafka.common.serialization.StringDeserializer
#mp.messaging.outgoing.test-out.auto.offset.reset=earliest
#mp.messaging.outgoing.test-out.merge=true